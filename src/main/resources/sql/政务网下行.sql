ALTER TABLE `fds_power`
ADD COLUMN `SYNCHRO_STATUS`  varchar(1) NULL COMMENT '同步状态N:未同步,Y:已同步' AFTER `AREACODE`,
ADD COLUMN `SYNCHRO_TIME`  datetime NULL COMMENT '同步时间' AFTER `SYNCHRO_STATUS`;

DROP TRIGGER IF EXISTS TRG_S_I_FDS_POWER;
CREATE TRIGGER TRG_S_I_FDS_POWER 
BEFORE INSERT ON FDS_POWER
FOR EACH ROW
BEGIN
   set NEW.SYNCHRO_STATUS = 'N';
END;

DROP TRIGGER IF EXISTS TRG_S_U_FDS_POWER;
CREATE TRIGGER TRG_S_U_FDS_POWER
BEFORE UPDATE ON FDS_POWER
FOR EACH ROW
BEGIN
   IF NEW.SYNCHRO_STATUS<>OLD.SYNCHRO_STATUS and (NEW.SYNCHRO_STATUS='Y' or NEW.SYNCHRO_STATUS='E') THEN  
      set NEW.SYNCHRO_TIME = SYSDATE();
   ELSEIF NEW.SYNCHRO_STATUS=OLD.SYNCHRO_STATUS THEN
      set NEW.SYNCHRO_STATUS = 'N';
   END IF;
END;

ALTER TABLE `fds_law`
ADD COLUMN `SYNCHRO_STATUS`  varchar(1) NULL COMMENT '同步状态N:未同步,Y:已同步' AFTER `AREACODE`,
ADD COLUMN `SYNCHRO_TIME`  datetime NULL COMMENT '同步时间' AFTER `SYNCHRO_STATUS`;

DROP TRIGGER IF EXISTS TRG_S_I_FDS_LAW;
CREATE TRIGGER TRG_S_I_FDS_LAW 
BEFORE INSERT ON FDS_LAW
FOR EACH ROW
BEGIN
   set NEW.SYNCHRO_STATUS = 'N';
END;

DROP TRIGGER IF EXISTS TRG_S_U_FDS_LAW;
CREATE TRIGGER TRG_S_U_FDS_LAW 
BEFORE UPDATE ON FDS_LAW
FOR EACH ROW
BEGIN
   IF NEW.SYNCHRO_STATUS<>OLD.SYNCHRO_STATUS and (NEW.SYNCHRO_STATUS='Y' or NEW.SYNCHRO_STATUS='E') THEN  
      set NEW.SYNCHRO_TIME = SYSDATE();
   ELSEIF NEW.SYNCHRO_STATUS=OLD.SYNCHRO_STATUS THEN
      set NEW.SYNCHRO_STATUS = 'N';
   END IF;
END;


ALTER TABLE `fds_standard`
ADD COLUMN `SYNCHRO_STATUS`  varchar(1) NULL COMMENT '同步状态N:未同步,Y:已同步' AFTER `AREACODE`,
ADD COLUMN `SYNCHRO_TIME`  datetime NULL COMMENT '同步时间' AFTER `SYNCHRO_STATUS`;

DROP TRIGGER IF EXISTS TRG_S_I_FDS_STANDARD;
CREATE TRIGGER TRG_S_I_FDS_STANDARD 
BEFORE INSERT ON FDS_STANDARD
FOR EACH ROW
BEGIN
   set NEW.SYNCHRO_STATUS = 'N';
END;

DROP TRIGGER IF EXISTS TRG_S_U_FDS_STANDARD;
CREATE TRIGGER TRG_S_U_FDS_STANDARD 
BEFORE UPDATE ON FDS_STANDARD
FOR EACH ROW
BEGIN
   IF NEW.SYNCHRO_STATUS<>OLD.SYNCHRO_STATUS and (NEW.SYNCHRO_STATUS='Y' or NEW.SYNCHRO_STATUS='E') THEN  
      set NEW.SYNCHRO_TIME = SYSDATE();
   ELSEIF NEW.SYNCHRO_STATUS=OLD.SYNCHRO_STATUS THEN
      set NEW.SYNCHRO_STATUS = 'N';
   END IF;
END;


ALTER TABLE `fds_standard_punish`
ADD COLUMN `SYNCHRO_STATUS`  varchar(1) NULL COMMENT '同步状态N:未同步,Y:已同步' AFTER `AREACODE`,
ADD COLUMN `SYNCHRO_TIME`  datetime NULL COMMENT '同步时间' AFTER `SYNCHRO_STATUS`;

DROP TRIGGER IF EXISTS TRG_S_I_FDS_STANDARD_PUNISH;
CREATE TRIGGER TRG_S_I_FDS_STANDARD_PUNISH 
BEFORE INSERT ON FDS_STANDARD_PUNISH
FOR EACH ROW
BEGIN
   set NEW.SYNCHRO_STATUS = 'N';
END;

DROP TRIGGER IF EXISTS TRG_S_U_FDS_STANDARD_PUNISH;
CREATE TRIGGER TRG_S_U_FDS_STANDARD_PUNISH 
BEFORE UPDATE ON FDS_STANDARD_PUNISH
FOR EACH ROW
BEGIN
   IF NEW.SYNCHRO_STATUS<>OLD.SYNCHRO_STATUS and (NEW.SYNCHRO_STATUS='Y' or NEW.SYNCHRO_STATUS='E') THEN  
      set NEW.SYNCHRO_TIME = SYSDATE();
   ELSEIF NEW.SYNCHRO_STATUS=OLD.SYNCHRO_STATUS THEN
      set NEW.SYNCHRO_STATUS = 'N';
   END IF;
END;